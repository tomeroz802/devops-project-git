
name: Java Maven Build & Publish Artifact

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
   
  publish-job:
    runs-on: ubuntu-latest
    needs: build_test
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - run: mvn --batch-mode --update-snapshots verify
    - run: mkdir staging && cp target/*.war hello-world-war5 
    - uses: actions/upload-artifact@v3
      with:
        name: hello-world-war5
        path: hello-world-war5
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:latest
    - name: run & test Container
      run: docker run -itd --name war-tomer-and-jo -p 80:8080 my-image-name:latest

    - name: change image name 
      run: docker tag my-image-name:latest lordagam/github-repo-hello-world-war5:latest
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: docker push
      run: docker push lordagam/github-repo-hello-world-war5:latest
   
   
   #   run: docker run -itd --name war-tomer-and-jo -p 80:8080 github-repo-hello-world-war5
   # - name: Build the Docker image
   #   run: docker build . --file Dockerfile --tag my-image-name:latest
   # - name: run & test Container
   #   run: docker run -itd --name war-tomer-and-jo -p 80:8080 github-repo-hello-world-war5
   # - run: sleep 30 && curl http://127.0.0.1:8080/hello-world-war5/;
    
